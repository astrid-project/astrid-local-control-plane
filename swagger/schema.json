{
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "tags": [
    {
      "name": "code",
      "description": "Code injection at run-time."
    },
    {
      "name": "config",
      "description": "Configuration at run-time."
    },
    {
      "name": "status",
      "description": "Status data of the LCP."
    }
  ],
  "paths": {
    "/code": {
      "delete": {},
      "post": {},
      "put": {}
    },
    "/config": {
      "post": {
        "summary": "Configuration update",
        "description": "Apply configuration changes to the local environment.",
        "tags": [
          "config"
        ],
        "parameters": [
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ConfigRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Configuration changes executed.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ConfigResponse"
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/HTTPError"
            }
          },
          "401": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/HTTPError"
            }
          }
        }
      }
    },
    "/status": {
      "post": {
        "summary": "Status set.",
        "description": "Set the last heartbeat.",
        "tags": [
          "status"
        ],
        "responses": {
          "200": {
            "description": "Status data of the LCP.",
            "schema": {
              "$ref": "#/definitions/StatusResponse"
            }
          },
          "401": {
            "description": "Unauthorized.",
            "schema": {
              "$ref": "#/definitions/HTTPError"
            }
          }
        }
      }
    }
  },
  "info": {
    "title": "Local Control Plane",
    "version": "745cba246f75aa378787f350ed3f73634687c635@master"
  },
  "swagger": "2.0",
  "definitions": {
    "ConfigActionRequest": {
      "type": "object",
      "properties": {
        "args": {
          "type": "string",
          "description": "Single command argument.",
          "example": "-al"
        },
        "cmd": {
          "type": "string",
          "description": "Command."
        },
        "daemon": {
          "type": "string",
          "description": "Key used to execute the command as daemon.",
          "example": "firewall"
        }
      },
      "required": [
        "cmd"
      ]
    },
    "ConfigParameterRequest": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "Parameter new value.",
          "example": "10s"
        },
        "scheme": {
          "type": "string",
          "description": "Scheme.",
          "example": "yaml"
        },
        "path": {
          "type": "string",
          "description": "Key path.",
          "example": "period"
        },
        "source": {
          "type": "string",
          "description": "Source filename.",
          "example": "filebeat.yml"
        }
      },
      "required": [
        "path",
        "scheme",
        "source",
        "value"
      ]
    },
    "ConfigResourceRequest": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "description": "Resource content."
        },
        "path": {
          "type": "string",
          "description": "File path",
          "example": "filebeat.yml"
        }
      },
      "required": [
        "content",
        "path"
      ]
    },
    "ConfigRequest": {
      "type": "object",
      "properties": {
        "actions": {
          "description": "List of actions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigActionRequest"
          }
        },
        "parameters": {
          "description": "List of parameters.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigParameterRequest"
          }
        },
        "resources": {
          "description": "List of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigResourceRequest"
          }
        }
      }
    },
    "ConfigResultResponse": {
      "type": "object",
      "properties": {
        "warning": {
          "type": "string",
          "description": "Warning message",
          "example": "Useless property: id"
        },
        "type": {
          "type": "string",
          "description": "Configuration type."
        }
      },
      "required": [
        "type"
      ]
    },
    "ConfigResponse": {
      "type": "object",
      "properties": {
        "when": {
          "type": "string",
          "format": "date-time",
          "description": "Datetime of the configuration changes",
          "example": "2020/02/13 15:27:06"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigResultResponse"
          }
        }
      },
      "required": [
        "results",
        "when"
      ]
    },
    "HTTPError": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Human readable message that describes the error.",
          "example": "The request body is not a valid JSON or it is not encoded as UTF-8."
        },
        "title": {
          "type": "string",
          "description": "Title error",
          "example": "400 Bad Request"
        }
      },
      "required": [
        "description",
        "title"
      ]
    },
    "StatusResponse": {
      "type": "object",
      "properties": {
        "started": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the LCP is started",
          "example": "2019_02_14 15:23:30"
        },
        "id": {
          "type": "string",
          "description": "ID of the execution environment.",
          "example": "apache"
        },
        "last_heartbeat": {
          "type": "string",
          "format": "date-time",
          "example": "2019_02_14 15:23:33",
          "description": "Timestamp of the last hearthbeat between the LCP and the CB"
        }
      },
      "required": [
        "id",
        "last_heartbeat",
        "started"
      ]
    }
  }
}